import 'package:flutter/material.dart';
import 'package:carousel_slider/carousel_slider.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: HomeScreen(),
    );
  }
}

class HomeScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Your App'),
        leading: IconButton(
          icon: Icon(Icons.menu),
          onPressed: () {
            // Handle menu button press
          },
        ),
        actions: [
          IconButton(
            icon: Icon(Icons.search),
            onPressed: () {
              // Handle search button press
            },
          ),
          IconButton(
            icon: Icon(Icons.chat),
            onPressed: () {
              // Handle chat button press
            },
          ),
          IconButton(
            icon: Icon(Icons.notifications),
            onPressed: () {
              // Handle notifications button press
            },
          ),
        ],
        bottom: PreferredSize(
          preferredSize: Size.fromHeight(30.0),
          child: Padding(
            padding: EdgeInsets.all(8.0),
            child: Text(
              'Additional text below the app bar',
              style: TextStyle(
                fontSize: 16.0,
                fontWeight: FontWeight.bold,
              ),
            ),
          ),
        ),
      ),
      body: SingleChildScrollView(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            SizedBox(height: 20),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Container(
                  width: MediaQuery.of(context).size.width * 0.4,
                  height: 60.0, // Set button height to 60dp
                  child: ElevatedButton(
                    onPressed: () {},
                    child: Text('Button 1'),
                    style: ElevatedButton.styleFrom(
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10.0),
                      ),
                    ),
                  ),
                ),
                Container(
                  width: MediaQuery.of(context).size.width * 0.4,
                  height: 60.0, // Set button height to 60dp
                  child: ElevatedButton(
                    onPressed: () {},
                    child: Text('Button 2'),
                    style: ElevatedButton.styleFrom(
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10.0),
                      ),
                    ),
                  ),
                ),
              ],
            ),
            SizedBox(height: 20),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Container(
                  width: MediaQuery.of(context).size.width * 0.4,
                  height: 60.0, // Set button height to 60dp
                  child: ElevatedButton(
                    onPressed: () {},
                    child: Text('Button 3'),
                    style: ElevatedButton.styleFrom(
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10.0),
                      ),
                    ),
                  ),
                ),
                Container(
                  width: MediaQuery.of(context).size.width * 0.4,
                  height: 60.0, // Set button height to 60dp
                  child: ElevatedButton(
                    onPressed: () {},
                    child: Text('Button 4'),
                    style: ElevatedButton.styleFrom(
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10.0),
                      ),
                    ),
                  ),
                ),
              ],
            ),
            SizedBox(height: 20),
            Padding(
              padding: EdgeInsets.all(8.0),
              child: Text(
                'Text above the sliders',
                style: TextStyle(
                  fontSize: 18.0,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ),
            SizedBox(height: 10),
            EventCardSlider(
              height: 400.0,
              events: [
                Event(
                  imagePath: 'assets/event1.png',
                  title: 'Event 1',
                  description: 'Description for Event 1',
                  date: 'Date for Event 1',
                ),
                Event(
                  imagePath: 'assets/event2.png',
                  title: 'Event 2',
                  description: 'Description for Event 2',
                  date: 'Date for Event 2',
                ),
                Event(
                  imagePath: 'assets/event3.png',
                  title: 'Event 3',
                  description: 'Description for Event 3',
                  date: 'Date for Event 3',
                ),
              ],
            ),
            SizedBox(height: 20),
            EventCardSlider(
              height: 400.0,
              events: [
                Event(
                  imagePath: 'assets/event4.png',
                  title: 'Event 4',
                  description: 'Description for Event 4',
                  date: 'Date for Event 4',
                ),
                Event(
                  imagePath: 'assets/event5.png',
                  title: 'Event 5',
                  description: 'Description for Event 5',
                  date: 'Date for Event 5',
                ),
                Event(
                  imagePath: 'assets/event6.png',
                  title: 'Event 6',
                  description: 'Description for Event 6',
                  date: 'Date for Event 6',
                ),
              ],
            ),
          ],
        ),
      ),
      bottomNavigationBar: _buildFooterBar(context),
    );
  }

  Widget _buildFooterBar(BuildContext context) {
    return BottomNavigationBar(
      items: const <BottomNavigationBarItem>[
        BottomNavigationBarItem(
          icon: Icon(Icons.home),
          label: 'Home',
        ),
        BottomNavigationBarItem(
          icon: Icon(Icons.school),
          label: 'Learn',
        ),
        BottomNavigationBarItem(
          icon: Icon(Icons.apps),
          label: 'Hub',
        ),
        BottomNavigationBarItem(
          icon: Icon(Icons.person),
          label: 'Profile',
        ),
      ],
      selectedItemColor: Colors.blue,
      unselectedItemColor: Colors.grey,
      currentIndex: 0,
      onTap: (int index) {
        // Handle bottom navigation item tap
        if (index == 0) {
          // Handle home navigation
          // Do nothing since we are already on the home page
        } else if (index == 1) {
          // Handle learn navigation
          // Navigate to Learn page
          Navigator.push(
            context,
            MaterialPageRoute(builder: (context) => LearnPage()),
          );
        } else if (index == 2) {
          // Handle hub navigation
          // Navigate to Hub page
          Navigator.push(
            context,
            MaterialPageRoute(builder: (context) => HubPage()),
          );
        } else if (index == 3) {
          // Handle profile navigation
          // Navigate to Profile page
          Navigator.push(
            context,
            MaterialPageRoute(builder: (context) => ProfilePage()),
          );
        }
      },
    );
  }
}

class Event {
  final String imagePath;
  final String title;
  final String description;
  final String date;

  Event({
    required this.imagePath,
    required this.title,
    required this.description,
    required this.date,
  });
}

class EventCardSlider extends StatelessWidget {
  final double height;
  final List<Event> events;

  EventCardSlider({
    required this.height,
    required this.events,
  });

  @override
  Widget build(BuildContext context) {
    return Container(
      height: height,
      child: CarouselSlider.builder(
        itemCount: events.length,
        itemBuilder: (BuildContext context, int index, int realIndex) {
          return Container(
            width: double.infinity,
            decoration: BoxDecoration(
              borderRadius: BorderRadius.circular(8.0),
              color: Colors.grey[200],
            ),
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                Image.asset(
                  events[index].imagePath,
                  height: 100.0,
                ),
                SizedBox(height: 10),
                Text(
                  events[index].title,
                  style: TextStyle(
                    fontSize: 20.0,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                SizedBox(height: 10),
                Text(
                  events[index].description,
                  style: TextStyle(
                    fontSize: 16.0,
                    color: Colors.grey,
                  ),
                ),
                SizedBox(height: 10),
                Text(
                  events[index].date,
                  style: TextStyle(
                    fontSize: 14.0,
                    color: Colors.grey,
                  ),
                ),
              ],
            ),
          );
        },
        options: CarouselOptions(
          height: height,
          enableInfiniteScroll: true,
          enlargeCenterPage: true,
          autoPlay: false,
          aspectRatio: 16 / 9,
          autoPlayCurve: Curves.fastOutSlowIn,
          autoPlayAnimationDuration: Duration(milliseconds: 800),
          viewportFraction: 0.8,
        ),
      ),
    );
  }
}

class LearnPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Learn'),
      ),
      body: Center(
        child: Text('This is the Learn Page'),
      ),
    );
  }
}

class HubPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Hub'),
      ),
      body: Center(
        child: Text('This is the Hub Page'),
      ),
    );
  }
}

class ProfilePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Profile'),
      ),
      body: Center(
        child: Text('This is the Profile Page'),
      ),
    );
  }
}
